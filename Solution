## 1_Create multiple web server instance

In the code we set the zone to 'default' . 
Setting the tags field lets you reference these instances all at once, such as with a firewall rule. 
These commands also install Apache on each instance and give each instance a unique home page.

instance 1:
  gcloud compute instances create www1 \
    --zone= \
    --tags=network-lb-tag \
    --machine-type=e2-medium \
    --image-family=debian-11 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: www1</h3>" | tee /var/www/html/index.html'

inctance 2:
  gcloud compute instances create www2 \
    --zone= \
    --tags=network-lb-tag \
    --machine-type=e2-medium \
    --image-family=debian-11 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: www2</h3>" | tee /var/www/html/index.html'

instance 3:
  gcloud compute instances create www3 \
    --zone= \
    --tags=network-lb-tag \
    --machine-type=e2-medium \
    --image-family=debian-11 \
    --image-project=debian-cloud \
    --metadata=startup-script='#!/bin/bash
      apt-get update
      apt-get install apache2 -y
      service apache2 restart
      echo "
<h3>Web Server: www3</h3>" | tee /var/www/html/index.html'

## 2_configure the load balancing service:
virtual machine instances will receive packets that are destined for the static external IP address we configure. 
Instances made with a Compute Engine image are automatically configured to handle this IP address.
Here we will create a static external IP address for our load balancer:
   gcloud compute addresses create network-lb-ip-1 \
    --region 
    
  Add a legacy HTTP health check resource:  
   gcloud compute http-health-checks create basic-check
   
  Add a target pool:
    gcloud compute target-pools create www-pool \
    --region  --http-health-check basic-check
    
   Add instances to the pool:
    gcloud compute target-pools add-instances www-pool \
    --instances www1,www2,www3

Add forwarding rule:
gcloud compute forwarding-rules create www-rule \
    --region   \
    --ports 80 \
    --address network-lb-ip-1 \
    --target-pool www-pool
    
    # Create an HTTP load balancer:
    To set up a load balancer with a Compute Engine backend, VMs need to be in an instance group. 
    The managed instance group provides VMs running the backend servers of an external HTTP load balancer. 
    
      1_First, create the load balancer template:
      gcloud compute instance-templates create lb-backend-template \
   --region= \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'
     
      2_Create a managed instance group based on the template:
      
      gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone= 
   
     3_Create the fw-allow-health-check firewall rule:
     gcloud compute firewall-rules create fw-allow-health-check \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80
  
  4_Set up a global static external IP address that the customers use to reach our load balancer:
  gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global
  
  5_Create a health check for the load balancer:
  gcloud compute health-checks create http http-basic-check \
  --port 80
  
 6_Create a backend service:
 gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global
  
  7_add instance group as backend to backend service:
  gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone= \
  --global
  
  8_Create URL map:
  gcloud compute url-maps create web-map-http \
    --default-service web-backend-service
    
  9_create HTTO proxy
  gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map-http
    
  10_Finaly create global Forwarding Rule:
  gcloud compute forwarding-rules create http-content-rule \
    --address=lb-ipv4-1\
    --global \
    --target-http-proxy=http-lb-proxy \
    --ports=80
